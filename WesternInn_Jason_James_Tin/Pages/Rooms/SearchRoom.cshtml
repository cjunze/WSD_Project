@page
@model WesternInn_Jason_James_Tin.Pages.Rooms.SearchRoomModel
@{
    ViewData["Title"] = "Search Rooms";
}

<h2>Search Rooms</h2>
<br/>

<form asp-page="SearchRoom">
    <div asp-validation-summary="ModelOnly" class="text-danger"></div>
    <div class="form-group m-3">
        <label asp-for="SearchRoomInput.BedCountInput" class="control-label fw-bold"></label>
        <select asp-for="SearchRoomInput.BedCountInput" asp-items="ViewBag.BedCountList" class="form-control">
        <span asp-validation-for="SearchRoomInput.BedCountInput" class="text-danger"></span>
        </select>
    </div>
   <div class="form-group m-3">
        <label asp-for="SearchRoomInput.CheckInInput" class="control-label fw-bold"></label>
        <input asp-for="SearchRoomInput.CheckInInput" class="form-control" />
        <span asp-validation-for="SearchRoomInput.CheckInInput" class="text-danger"></span>
    </div>
    <div class="form-group m-3">
        <label asp-for="SearchRoomInput.CheckOutInput" class="control-label fw-bold"></label>
        <input asp-for="SearchRoomInput.CheckOutInput" class="form-control" />
        <span asp-validation-for="SearchRoomInput.CheckOutInput" class="text-danger"></span>
    </div> 
    <br/>
    <div class="form-group">
        <input type="submit" value="Search Room" class="btn btn-primary" />
    </div>
</form>

@* Check this page is requested for the first time or after 'post' method.
    If 'post', then display the comparison results. *@
@if (Model.RoomResult != null)
{
    <div>
        <hr />
        @if (Model.RoomResult.Count == 0)
        {
            <h4>
                Sorry, there are no rooms available for you. Please try again.
            </h4>
        }
        else
        {
            <h2>List of Available Rooms</h2>
            <table class="table">
                <tr>
                    <th>
                        @Html.DisplayNameFor(model => model.RoomResult[0].Id)
                    </th>
                    <th>
                        @Html.DisplayNameFor(model => model.RoomResult[0].Level)
                    </th>
                    <th>
                        @Html.DisplayNameFor(model => model.RoomResult[0].BedCount)
                    </th>
                    <th>
                        @Html.DisplayNameFor(model => model.RoomResult[0].Price)
                    </th>
                </tr>

                @foreach (var item in Model.RoomResult)
                {
                    <tr>
                        <td>
                            <a asp-page="/Rooms/BookRoom" asp-route-RoomIdInput="@item.Id" asp-route-CheckInInput="@Model.SearchRoomInput.CheckInInput" asp-route-CheckOutInput="@Model.SearchRoomInput.CheckOutInput">@Html.DisplayFor(modelItem => item.Id)</a>
                        </td>
                        <td>
                            @Html.DisplayFor(modelItem => item.Level)
                        </td>
                        <td>
                            @Html.DisplayFor(modelItem => item.BedCount)
                        </td>
                         <td>
                            @Html.DisplayFor(modelItem => item.Price)
                        </td>
                    </tr>
                }
            </table>
        }
    </div>
}

@* Inlcude JavaScript for client-side vaildations.*@
@section Scripts {
    @{
        await Html.RenderPartialAsync("_ValidationScriptsPartial");
    }
    }